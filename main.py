from arquivos.caminho_dos_arquivos import CaminhoDosArquivos

from questao_01.resposta_questao_01 import questao_um_retorno_soma
from questao_02.resposta_questao_02 import sequencia_fibonacci
from questao_03.resposta_questao_03 import ArquivoJSON
from questao_03.resposta_questao_03 import ArquivoXML
from questao_04.resposta_questao_04 import faturamento_das_distribuidoras
from questao_05.resposta_questao_05 import InverterStrings

if __name__ == '__main__':
    tralha_para_ficar_bonito_no_console: str = '##########'

    print(f'Ol√° Mundo!')
    print(f'Para dar sorte.')

    print(f'\n{tralha_para_ficar_bonito_no_console}')
    print(f'Quest√£o 01 - Soma')
    print(
        f'Nessa quest√£o, foi passado um trecho de c√≥digo, com o intuito de validar qual o resultado gerado, desta forma, efetuei a replica√ß√£o em Python, para obter o resultado, e exib√≠-lo ao efetuar a invoca√ß√£o da fun√ß√£o. Desta forma, '
        f'segue abaixo o resultado.'
    )
    print(f'Resultao da soma: ', end='')
    questao_um_retorno_soma()

    print(f'\n{tralha_para_ficar_bonito_no_console}')
    print(f'Quest√£o 02 - Sequ√™ncia Fibonacci')
    print(
        f'Nessa quest√£o, foi aplicado a l√≥gica da sequ√™ncia Fibonacci, a qual, resumidamente, consiste em efetuar a soma num√©rica de determinada sequ√™ncia repetidas vezes at√© seu total num√©rico, isto √©: \n'
        f'A sequ√™ncia Fibonacci de 10 consiste em sua soma sequ√™ncial de 0 at√© 10, pelos seus n√∫meros que os comp√µem, ou seja: '
        f'0 + 1 + 2 [...] 10'
    )
    print(f'Assim sendo, criquei a fun√ß√£o "sequencia_fibonacci", a qual receber√° como par√¢metro a sequ√™ncia Fibonacci que deseja obter. Por ser um ponto apenas para validar a l√≥gica de programa√ß√£o, irei inserir o numeral 10 fixamente ao '
          f'invoc√°-la.')
    print(f'Desta forma, conseguimos validar que o Fibonacci(10) possui [...] ', end='')
    sequencia_fibonacci(10)

    print(f'\n{tralha_para_ficar_bonito_no_console}')
    print(f'Quest√£o 03 - Manipular arquivos')

    arquivo_json = ArquivoJSON()
    setattr(arquivo_json, 'caminho_json', CaminhoDosArquivos.ARQUIVO_JSON.value)

    arquivo_xml = ArquivoXML()
    setattr(arquivo_xml, 'caminho_xml', CaminhoDosArquivos.ARQUIVO_XML.value)

    print(f'\n{tralha_para_ficar_bonito_no_console}')
    print(f'Quest√£o 04 - Percentual de Faturamento')
    print(f'Nessa quest√£o, foi proposto um dicon√°rio, contendo valores dos faturamentos de distribuidoras com base em cada estado da regi√£o suldeste, e solicitou a apura√ß√£o do percentual de faturamento com base na soma de todas as '
          f'distribuidoras.')
    print(f'Desta forma, efetuei a itera√ß√£o neste direcion√°rio, somando seus valores em uma vari√°vel separada, e ap√≥s, dividi seus valores inviduais pelo seu total. Com isto, √© poss√≠vel obter o seguinte:')
    faturamento_das_distribuidoras = faturamento_das_distribuidoras(
        dict(
            SP=67836.43,
            RJ=36678.66,
            MG=29229.88,
            ES=27165.48,
            Outros=19849.53
        ))
    print(f'{"":5}O valor total do faturamento de todos os estados √©: {faturamento_das_distribuidoras[1]}')
    print(f'{"":5}O percentual individual de cada distribuidora, poder√° ser conferiro a seguir:')
    for (distribuidora, valores) in faturamento_das_distribuidoras[0].items(): print(f'{"":10}{distribuidora}: Faturamento = {valores.get("faturamento")} | Percentual = {100 * valores.get("percentual")}%')

    print(f'\n{tralha_para_ficar_bonito_no_console}')
    print(f'Quest√£o 05 - Inverter a String')
    print(f'Para efetuar o processo de interver determinada String, optei pelo processo de criar uma classe para inserir valores a serem destinados ao atributo "palavra", e ap√≥s, pelos m√©todos GET e SET ser√° poss√≠vel oter estes retornos.')

    texto_para_ser_convertido: str = 'texto_para_ser_convertido'

    converter_stirng = InverterStrings(texto_para_ser_convertido)

    print(f'Palavra original: "{converter_stirng.palavra}"')
    print(f'Palavra convertida: "{converter_stirng.inverter_a_string()}"\n')

    converter_stirng.palavra = 'Uma nova String para ser convertida totalmente diferente da anterior e super extensa para sabermos se este processo ir√° funcionar.'
    print(f'Palavra original: "{converter_stirng.palavra}"')
    print(f'Palavra convertida: "{converter_stirng.inverter_a_string()}"')

    print(f'\n{tralha_para_ficar_bonito_no_console}')
    print(f'E com isto, chega-se ao final do teste pr√°tico. Obrigado. E lhe desejo uma vida longa e pr√≥spera. üññüèª')